#!/bin/bash
set -e

GIT=/usr/bin/git
GREP=/usr/bin/grep
SED=/usr/bin/sed
SORT=/usr/bin/sort
UNIQ=/usr/bin/uniq

if [[ "$JIRA_URL_PREFIX" == "" ]]; then
    >&2 echo "❌  URL preprocessing is not available! Please define JIRA_URL_PREFIX env var to enable"
    exit 1
fi

# Use case #1: open issue url for current branch
task_arg=$1
if [[ '' == "$task_arg" ]]; then
    CURRENT_BRANCH=`$GIT branch --show-current`
    JIRA_CODE=`echo $CURRENT_BRANCH | sed -e 's/_[a-zA-Z0-9_]*//'`
    if [[ '' = "$JIRA_CODE" ]]; then
      >&2 echo "❌  Cannot detect JIRA code from branch ($CURRENT_BRANCH)"
      exit 1
    fi

    echo "🔬 Opening issue: ${JIRA_URL_PREFIX}${JIRA_CODE}"
    open "${JIRA_URL_PREFIX}${JIRA_CODE}"
    exit
fi

# Use case #2: switch to issue branch from the given URL
if [[ "$JIRA_URL_PREFIX" == "" ]]; then
    >&2 echo "❌  URL preprocessing is not available! Please define JIRA_URL_PREFIX env var to enable"
    task_name=$task_arg
else
    task_name=$(echo $1 | $SED -e "s#${JIRA_URL_PREFIX}##" -e 's#?.*##g')
    if [[ "$task_name" != "$task_arg" ]]; then
        echo "✏️  Task argument preprocessing: '${task_arg}' -> '${task_name}'"
    fi
fi

if [[ '' == "$task_name" ]]; then
  >&2 echo "❌  No task name found at the argument"
  exit
fi

matched_branch=$($GIT branch -a | $GREP -i "$task_name" | $SED -e "s#remotes/origin/##" -e 's#\*# #' | $SORT | $UNIQ)
if [[ '' = "$matched_branch" ]]; then
  >&2 echo "❌  No matched branches found"
  exit
fi

multiple_matched_branches=$(echo $matched_branch | $SED -n '/[A-Za-z0-9_] [A-Z]/p')
if [[ "$multiple_matched_branches" != "" ]]; then
  >&2 echo "⚠️  Task: '$task_name'. Multiple branches found: $multiple_matched_branches"
  exit
fi

echo "📋  Branch to checkout: $matched_branch"
$GIT checkout $matched_branch
echo "🏁  `date +"%H:%M:%S"` Done!"
